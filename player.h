const unsigned char PROGMEM theodore[] =
{
// width, height,
	16, 16,
// FRAME 00
	0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xe0, 0xf0, 0xe0, 0xf0, 0xe0, 0xf0, 0xe0, 0xf0, 0xe0, 0xf0,
	0xe0, 0xf0, 0xe0, 0xf0, 0xe0, 0xf0, 0xe0, 0xf0, 0xe0, 0xf0, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7f, 0xff, 0x7f, 0xff, 0x7f, 0xff, 0x7f, 0xff, 0x7f, 0xff,
	0x79, 0xff, 0x7f, 0xff, 0x7f, 0xff, 0x79, 0xff, 0x7f, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00,

// FRAME 01
	0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x80, 0xf8, 0xf0, 0xf8, 0xf0, 0xf8, 0xf0, 0xf8, 0xe0, 0xf8,
	0xe0, 0xf0, 0xe0, 0xf0, 0xe0, 0xf0, 0xc0, 0xf0, 0xc0, 0xe0, 0xc0, 0xe0, 0x00, 0xe0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x3e, 0x1c, 0x3f, 0x1f, 0x3f, 0x1f, 0x7f, 0x3f, 0x7f, 0x3f, 0x7f, 0x3f, 0x7f,
	0x3c, 0xff, 0x7f, 0xff, 0x7f, 0xff, 0x7c, 0xff, 0x0f, 0xff, 0x01, 0x1f, 0x00, 0x03, 0x00, 0x00,

// FRAME 02
	0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0xc0, 0x80, 0xf0, 0xe0, 0xf8, 0xf0, 0xfc, 0xf8, 0xfc,
	0xf0, 0xfc, 0xe0, 0xf8, 0xc0, 0xf0, 0xc0, 0xe0, 0x80, 0xe0, 0x00, 0xc0, 0x00, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x07, 0x02, 0x0f, 0x07, 0x1f, 0x0f, 0x1f, 0x0f, 0x3f, 0x1f, 0x7f, 0x3f, 0xff,
	0x7c, 0xff, 0x3f, 0xff, 0x1f, 0x7f, 0x04, 0x3f, 0x03, 0x0f, 0x01, 0x07, 0x00, 0x03, 0x00, 0x00,

// FRAME 03
	0x00, 0x00, 0x00, 0x80, 0x00, 0xc0, 0x80, 0xe0, 0xc0, 0xf0, 0xe0, 0xf8, 0xf0, 0xfc, 0xf8, 0xfc,
	0xf8, 0xfc, 0xf0, 0xfc, 0xe0, 0xf8, 0xc0, 0xf0, 0x80, 0xe0, 0x00, 0xc0, 0x00, 0x80, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x07, 0x03, 0x0f, 0x07, 0x1f, 0x0f, 0x3f, 0x1f, 0x7f, 0x3f, 0xff, 0x7f, 0xff,
	0x7c, 0xff, 0x3f, 0xff, 0x1f, 0x7f, 0x0c, 0x3f, 0x07, 0x1f, 0x03, 0x0f, 0x00, 0x07, 0x00, 0x00,

// FRAME 04
	0x00, 0x00, 0x00, 0x80, 0x00, 0xc0, 0x80, 0xe0, 0xc0, 0xe0, 0xc0, 0xf0, 0xe0, 0xf8, 0xf0, 0xfc,
	0xf8, 0xfc, 0xf0, 0xfc, 0xe0, 0xf8, 0x80, 0xf0, 0x00, 0xc0, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0x01, 0x07, 0x03, 0x0f, 0x07, 0x3f, 0x1f, 0x7f, 0x3f, 0xff, 0x7f, 0xff,
	0x3c, 0xff, 0x1f, 0x7f, 0x0f, 0x3f, 0x0c, 0x1f, 0x07, 0x1f, 0x02, 0x0f, 0x00, 0x07, 0x00, 0x00,

// FRAME 05
	0x00, 0x00, 0x00, 0xe0, 0xc0, 0xe0, 0xc0, 0xe0, 0xc0, 0xf0, 0xe0, 0xf0, 0xe0, 0xf0, 0xe0, 0xf0,
	0xe0, 0xf8, 0xf0, 0xf8, 0xf0, 0xf8, 0xf0, 0xf8, 0x80, 0xf8, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x03, 0x01, 0x1f, 0x0f, 0xff, 0x7f, 0xff, 0x7f, 0xff, 0x7f, 0xff, 0x3f, 0xff,
	0x3c, 0x7f, 0x3f, 0x7f, 0x3f, 0x7f, 0x1c, 0x7f, 0x1f, 0x3f, 0x1c, 0x3f, 0x00, 0x3e, 0x00, 0x00,
};

typedef struct Player: Entity
{
	int maxScoreDigits = 7;
	int score = 0;

	Player()
	{
		x = 10, y = 0;
		width = 16, height = 16;
		cbox = {.x = 4, .y = 8, .width = 8, .height = 8};

		momY = 0;
		weight = 0.35;
		movementSpeed = 1.5;
		jumpStrength = 5;

		frames = 6;
		curFrame = 0;
		animationFrequency = 3;
	}

	void update()
	{
		control();
		animate();
		physics();
		updateCollide();
		increaseScore();
	}

	void draw()
	{
		sketch(theodore);
	}

	void control()
	{
		if (arduboy.justPressed(A_BUTTON | B_BUTTON | UP_BUTTON))
		{
			jump();
		}

		if (arduboy.pressed(LEFT_BUTTON))
		{
			if (x - movementSpeed > 0)
			{
				animationFrequency = 4;
				x -= movementSpeed;
			}
		}
		else if (arduboy.pressed(RIGHT_BUTTON))
		{
			if (x + movementSpeed + width < WIDTH)
			{
				animationFrequency = 2;
				x += movementSpeed;
			}
		}
		else
		{
			animationFrequency = 3;
		}
	}

	void increaseScore()
	{
		// one point every second since we're running at 60fps
		if (arduboy.everyXFrames(60))
		{
			score += int(x / WIDTH * 4) + 1;
		}
	}

	void drawScore()
	{
		String displayScore = String(score);

		while (displayScore.length() < maxScoreDigits)
		{
			displayScore = "0" + displayScore;
		}

		prettyPrintNumber(displayScore, WIDTH - maxScoreDigits * 7 - 3, 3);
	}
};
