const unsigned char PROGMEM MICHAEL[] = {
	0x41, 0xef, 0xbf, 0x76, 0x1c, 0x0e, 0xe3, 0x96, 0x6b, 0xf8, 0x4d, 0x5e, 0xbd, 0x7a, 0xf5, 0xea,
	0xd5, 0x2b, 0x07, 0x4e, 0x3b, 0x9b, 0x6b, 0x6e, 0xe3, 0x70, 0xe8, 0x5f, 0xac, 0x4c, 0x7e, 0x46,
	0x6e, 0xf1, 0x22, 0xde, 0x7a, 0xcb, 0xd5, 0xab, 0x57, 0xaf, 0x5e, 0xbd, 0x7a, 0xec, 0x6d, 0x5c,
	0xe6, 0x3c, 0xe5, 0xf1, 0xcc, 0xef, 0xe2, 0xea, 0xd5, 0x6b, 0x6e, 0xbd, 0x8d, 0xc3, 0x85, 0x11,
	0xd6, 0xb8, 0xac, 0xcb, 0x3a, 0xe5, 0x19, 0xc7, 0x71, 0x99, 0x7b, 0xef, 0xbd, 0xf7, 0xc1, 0xf3,
	0xb8, 0xcc, 0xbd, 0xf7, 0x3e, 0x0c, 0x1c, 0x15, 0xd3, 0x50, 0x32, 0x14, 0x75, 0xe7, 0x01, 0x17,
	0x44, 0x36, 0x46, 0x06, 0xce, 0x84, 0x13, 0xe4, 0x20, 0xc1, 0xa1, 0x03, 0xa3, 0x13, 0x95, 0x6d,
	0xdd, 0xd6, 0x03, 0xe5, 0xb2, 0xfa, 0x03, 0x38, 0x49, 0x4f, 0xb9, 0x7a, 0x71, 0x39, 0x9a, 0xe5,
	0x72, 0xa5, 0xc3, 0xc3, 0x9a, 0x37, 0x8e, 0xea, 0x61, 0xef, 0xaa, 0x44, 0x77, 0x9e, 0xdf, 0xff,
	0x5a, 0x6b, 0x66, 0x19, 0x4f, 0xf9, 0x4b, 0xa5, 0x1e, 0x38, 0x53, 0x06, 0x65, 0x10, 0x03, 0x85,
	0x09, 0x23, 0x81, 0x14, 0x57, 0xe6, 0xfa, 0xaf, 0x0a,
};


// File: michael_65x46.png
// Size: 66x48px (396 bytes)
// Compressed: 169 bytes
// Ratio: 0.42676768

const unsigned char PROGMEM WINK[] =
{
	0x07, 0x07, 0xdf, 0x07,
};


// File: wink_7x6.png
// Size: 8x8px (8 bytes)
// Compressed: 4 bytes
// Ratio: 0.5

const unsigned char PROGMEM COMPYCORE[] =
{
	0x43, 0x8f, 0x4f, 0x4e, 0x75, 0xdb, 0x2c, 0x4f, 0x63, 0xac, 0x5a, 0xbb, 0xc6, 0xb8, 0xdc, 0xc6,
	0x61, 0x9e, 0xba, 0x2e, 0xb7, 0x6a, 0xb5, 0xa7, 0x63, 0x7b, 0xb8, 0xac, 0xb9, 0xec, 0x65, 0x8c,
	0x55, 0xeb, 0xcc, 0xf0, 0x7a, 0xaa, 0xdb, 0x9e, 0x4e, 0xab, 0x5b, 0xab, 0x7b, 0x8c, 0xcb, 0xad,
	0xb2, 0xb0, 0x6e, 0xff, 0x8b, 0x01,
};


// File: art/compycore/compycore_67x13.png
// Size: 68x16px (136 bytes)
// Compressed: 54 bytes
// Ratio: 0.3970588
